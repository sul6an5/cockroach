load("//build/bazelutil/unused_checker:unused.bzl", "get_x_data")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "ycsbt",
    srcs = [
        "acknowledged_counter.go",
        "uniform_generator.go",
        "ycsbt.go",
        "juicer_zipfgenerator.go",
    ],
    importpath = "github.com/cockroachdb/cockroach/pkg/workload/ycsbt",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/col/coldata",
        "//pkg/sql/pgwire/pgcode",
        "//pkg/sql/types",
        "//pkg/util/bufalloc",
        "//pkg/util/syncutil",
        "//pkg/util/timeutil",
        "//pkg/workload",
        "//pkg/workload/histogram",
        "@com_github_cockroachdb_cockroach_go_v2//crdb/crdbpgxv5",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_jackc_pgconn//:pgconn",
        "@com_github_jackc_pgx_v5//:pgx",
        "@com_github_jackc_pgx_v5//pgxpool",
        "@com_github_spf13_pflag//:pflag",
        "@org_golang_x_exp//rand",
    ],
)

go_test(
    name = "ycsb_test",
    size = "medium",
    srcs = [
        "main_test.go",
        "zipfgenerator_test.go",
    ],
    args = ["-test.timeout=295s"],
    embed = [":ycsbt"],
    shard_count = 16,
    deps = [
        "//pkg/testutils/skip",
        "//pkg/util/leaktest",
        "//pkg/util/timeutil",
        "@org_golang_x_exp//rand",
    ],
)

get_x_data(name = "get_x_data")

go_test(
    name = "ycsbt_test",
    srcs = [
        "main_test.go",
        "zipfgenerator_test.go",
    ],
    embed = [":ycsbt"],
    deps = [
        "//pkg/testutils/skip",
        "//pkg/util/leaktest",
        "//pkg/util/timeutil",
        "@org_golang_x_exp//rand",
    ],
)
